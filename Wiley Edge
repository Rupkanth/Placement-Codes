import java.io.*;
import java.util.Scanner;
import java.util.*;
public class Main{
static int N;
static int[][] Maze;
private static void solve(int i,int j,int a[][],int n,ArrayList<String> ans,String move,int vis[][],int di[],int dj[]){
if(i==n-1 && j==n-1){
ans.add(move);
return;
}
String dir="DR";
for(int ind=0;ind<2;ind++){
int nexti=di[ind];
int nextj=dj[ind];
if(nexti>=0 && nextj>=0 && nexti<n && nextj<n && vis[nexti][nextj]==0 && a[nexti][nextj]>=1){
vis[i][j]=1;
solve(nexti,nextj,a,n,ans,move+dir.charAt(ind),vis,di,dj);
vis[i][j]=0;
}
}
}
public static ArrayList<String> findPath(int[][]m ,int n){
int vis[][]=new int[n][n];
for(int i=0;i<n;i++){
for(int j=0;j<n;j++){
vis[i][j]=0;
}
}
ArrayList<String> ans=new ArrayList<>();
int di[]={1,0,0,-1};
int dj[]={0,-1,1,0};
solve(0,0,m,n,ans,"",vis,di,dj);
return ans;
}
public static void main(String[] args){
Scanner sc=new Scanner(System.in);
N=sc.nextInt();
Maze=new int[N][N];
Main obj=new Main();
for(int i=0;i<N;i++){
for(int j=0;j<N;j++){
Maze[i][j]=sc.nextInt();
}
}
ArrayList<String> ans=obj.findPath(Maze,N);
int sum=0;
String tempans=ans.get(0);
int x=0,y=0;
sum=Maze[x][y];
for(int i=0;i<tempans.length();i++){
if(tempans.charAt(i)=='D'){
x=x+1;
sum=sum+Maze[x][y];
}
else
{
y=y+1;
sum=sum+Maze[x][y];
}
}
System.out.println(sum);
}
}
