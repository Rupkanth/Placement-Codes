#include<bits/stdc++.h> 
using namespace std; 
bool isSubsetSum(vector<int> &arr, int n, int sum){ 
    bool subset[2][sum + 1]; 
    for (int i = 0; i <= n; i++) { 
        for (int j = 0; j <= sum; j++) { 
            if (j == 0) 
                subset[i % 2][j] = true; 
            else if (i == 0) 
                subset[i % 2][j] = false; 
            else if (arr[i - 1] <= j) 
                subset[i % 2][j] = subset[(i + 1) % 2] 
             [j - arr[i - 1]] || subset[(i + 1) % 2][j]; 
            else 
                subset[i % 2][j] = subset[(i + 1) % 2][j]; 
        } 
    } 
    return subset[n % 2][sum]; 
} 
int main(){ 
    int t; 
    cin>>t; 
    map<int, set<int> > m1; 
    for(int i = 1; i <= 10000; i++){ 
        string temp = to_string(i); 
        for(auto ch: temp) 
            m1[ch-'0'].insert(i); 
    } 
    while(t--){ 
        int n, k, i; 
        cin >> n >> k; 
        vector<int> arr(n), a; 
        for(auto it: m1[k]) 
            a.push_back(it); 
        for(i = 0; i < n; i++) 
            cin >> arr[i]; 
        for(i = 0; i < n; i++){ 
            if(isSubsetSum(a, a.size(), arr[i])) 
                cout << "YES" << endl; 
            else 
                cout << "NO" << endl; 
        } 
    } 
    return 0; 
}
