  import java.util.Arrays;

public class GFG {
    public static void main(String[] args) {

        int max = 1000000;
        int[] facs = new int[max];
//Follow us on telegram at Blackhatcoding
        for (int i = 2; i < max; ++i) {
            for (int j = i; j < max; j += i) {
                facs[j]++;
            }
        }

        // System.out.println(Arrays.toString(facs));
        int count = 0;
        for (int i = 0; i < max; ++i)
            if (facs[i] == 7)// 1 is a factor of all number so check for count 7
            {

                if (primeFactors(i) == 2 + 1) {
                    System.out.println("YESSSSSSS");
                    break;
                }
            }
//Follow up on telegram- blackhatcoding
        System.out.println(count);
    }

    static int primeFactors(int n) {
        // Print the number of 2s that divide n
        while (n % 2 == 0) {

            n /= 2;
        }
//Follow us on telegram at Blackhatcoding

        // n must be odd at this point. So we can
        // skip one element (Note i = i +2)
        for (int i = 3; i <= Math.sqrt(n); i += 2) {
            // While i divides n, print i and divide n
            while (n % i == 0) {

                n /= i;
            }
        }

        return n;
    }
}

